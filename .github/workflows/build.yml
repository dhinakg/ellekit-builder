name: CI

env:
  build_cmd: xcodebuild CODE_SIGNING_ALLOWED="NO" CODE_SIGNING_REQUIRED="NO" CODE_SIGN_IDENTITY="" -target

on:
  push:
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '.gitignore'
      
  workflow_dispatch:
  
jobs:
  package:
    name: Package
    runs-on: macos-12
    strategy:
      matrix:
        include:
          - name: release
            flags: ""
          # - name: release (rootless)
          #   flags: "-r"
          - name: release with logs
            flags: "-l"
          # - name: release with logs (rootless)
          #   flags: "-l -r"
          - name: debug
            flags: "-c Debug"
          # - name: debug (rootless)
          #   flags: "-c Debug -r"
          - name: dhinak
            flags: "-c Debug -s"
          # - name: dhinak (rootless)
          #   flags: "-c Debug -s -r"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: evelyneee/ellekit
      - name: Checkout builder
        uses: actions/checkout@v3
        with:
          path: builder
      - name: Copy builder files
        run: |
          cp -r builder/* .
          rm -rf builder
      
      - name: Get tags
        run: git fetch --prune --unshallow --tags

      - name: Select Xcode version (14.1)
        run: |
          sudo xcode-select --switch /Applications/Xcode_14.1.app

      - name: Bootstrap Procursus
        uses: beerpiss/procursus-action@v2.0.1
        with:
          packages: ldid findutils sed coreutils fakeroot
          cache: true
          cache-path: ~/__cache

      - name: Build ${{ matrix.name }}
        run: |
          ./build.sh ${{ matrix.flags }}
          
      - name: Build ${{ matrix.name }} (rootless)
        run: |
          ./build.sh ${{ matrix.flags }} -r

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }} package
          path: ${{ github.workspace }}/packages/*.deb    

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: package
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && false }}

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: packages
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: repo
      - name: Push packages
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"
          mkdir pool || true
          cp ../packages/**/*.deb pool/
          git add pool
          git pull
          git commit -m "Update packages"
          git push
        working-directory: repo