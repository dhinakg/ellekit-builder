name: CI

env:
  build_cmd: xcodebuild CODE_SIGNING_ALLOWED="NO" CODE_SIGNING_REQUIRED="NO" CODE_SIGN_IDENTITY="" -target

on:
  push:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch:
    inputs:
      force:
        description: 'Force build'
        required: true
        default: false
        type: boolean
      force-deploy:
        description: 'Force deploy if build is forced'
        required: true
        default: false
        type: boolean


concurrency:
  group: ${{ github.workflow }}

permissions:
  contents: write

jobs:
  needs-build:
    name: Check if build is needed
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.check.outputs.build }}
      commit: ${{ steps.check.outputs.commit }}
      tag_name: ${{ steps.check.outputs.tag_name }}
      description: ${{ steps.check.outputs.description }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: evelyneee/ellekit
      - name: Get tags
        run: git fetch --prune --unshallow --tags

      - name: Clone repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          path: repo
      - name: Check if build is needed
        id: check
        env:
          FORCE_BUILD: ${{ github.event.inputs.force }}
        run: |
          echo "commit=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          if [[ "$(git rev-parse HEAD)" != "$(cat repo/last_build)" ]] || [[ "$FORCE_BUILD" == "true" ]]; then
            echo "tag_name=$(git describe --tags --always --dirty | sed 's/-/\./g' | sed 's/\.g/\./g' | sed 's/^v//g')" >> $GITHUB_OUTPUT
            echo "description<<EOF" >> $GITHUB_OUTPUT
            echo "$(git log --format=%B -n 1 HEAD)" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "build=true" >> $GITHUB_OUTPUT
          else
            echo "build=false" >> $GITHUB_OUTPUT
          fi
          cat $GITHUB_OUTPUT

  package:
    name: Package
    runs-on: macos-12
    needs: needs-build
    if: ${{ needs.needs-build.outputs.build == 'true' }}
    strategy:
      matrix:
        include:
          - name: release
            flags: ""
          # - name: release (rootless)
          #   flags: "-r"
          # - name: release with logs
          #   flags: "-l"
          # - name: release with logs (rootless)
          #   flags: "-l -r"
          - name: debug
            flags: "-c Debug"
          # - name: debug (rootless)
          #   flags: "-c Debug -r"
          - name: dhinak
            flags: "-c Debug -s"
          # - name: dhinak (rootless)
          #   flags: "-c Debug -s -r"

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: evelyneee/ellekit
      - name: Checkout builder
        uses: actions/checkout@v3
        with:
          path: builder
      - name: Get git commit
        id: git_commit
        run: |
          echo "GIT_COMMIT=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
      # - name: Copy builder files
      #   run: |
      #     cp -r builder/* .
      #     rm -rf builder
      - name: Add builder to git exclude
        run: |
          printf "builder\nDerivedData\npackages\n" >> .git/info/exclude
      
      - name: Get tags
        run: git fetch --prune --unshallow --tags

      - name: Select Xcode version (14.2)
        run: |
          sudo xcode-select --switch /Applications/Xcode_14.2.app

      - name: Bootstrap Procursus
        uses: dhinakg/procursus-action@main
        with:
          packages: ldid findutils sed coreutils fakeroot
          cache: true
          cache-path: ~/__cache
        env:
          DEBIAN_FRONTEND: noninteractive

      - name: Build ${{ matrix.name }}
        run: |
          ./builder/build.sh ${{ matrix.flags }}

      - name: Upload packages
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.name }} package
          path: ${{ github.workspace }}/packages/*.deb    

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [needs-build, package]
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.force != true || github.event.inputs.force-deploy == true }}

    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          repository: ${{ secrets.REPO }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: packages
      - name: Configure git
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - name: Write last commit hash
        run: |
          echo "${{ needs.needs-build.outputs.commit }}" > last_build
      - name: Copy packages
        run: |
          mkdir pool || true
          cp packages/**/*.deb pool/
      - name: Push
        run: |
          git add pool last_build
          git pull
          git commit -m "Update packages"
          git push
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: true
          tag_name: ${{ needs.needs-build.outputs.tag_name }}
          files: packages/**/*.deb
          body: |
            https://github.com/evelyneee/ellekit/commit/${{ needs.needs-build.outputs.commit }}
            
            ${{ needs.needs-build.outputs.description }}
